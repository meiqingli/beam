include "../common/akka.conf"
include "../common/akka-router.conf"
include "../common/metrics.conf"
include "../common/matsim.conf"
include "demo-base-1k.conf"

##################################################################
# Agentsim
##################################################################
beam.agentsim.simulationName = "sf-1k-constrained"
beam.agentsim.lastIteration = 10

# MODE CHOICE OPTIONS:
beam.agentsim.agents.modalBehaviors.modeChoiceClass = "ModeChoiceMultinomialLogit"
beam.agentsim.agents.modalBehaviors.defaultValueOfTime = 8.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.transfer = -1.4
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.car_intercept = -2.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.walk_transit_intercept = 0.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.drive_transit_intercept = 0.5
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_transit_intercept = 2.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_intercept = 2.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.ride_hail_pooled_intercept = 1.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.walk_intercept = 0.0
beam.agentsim.agents.modalBehaviors.mulitnomialLogit.params.bike_intercept = -10.0

beam.agentsim.agents.vehicles.vehicleTypesFilePath = ${beam.inputDirectory}"/vehicleTypes.csv"

beam.agentsim.agents.vehicles.meanPrivateVehicleStartingSOC = 0.5
beam.agentsim.agents.vehicles.meanRidehailVehicleStartingSOC = 0.75
#TAZ params
beam.agentsim.taz.parkingFilePath = ${beam.inputDirectory}"/auto-generated-parking/sf-taz-parking-26-clusters-50-kW-0.1-prob.csv"
beam.agentsim.agents.rideHail.initialization.parking.filePath = ${beam.inputDirectory}"/auto-generated-parking/sf-depot-parking-4-clusters-50-kW-0.25-prob.csv"
beam.agentsim.taz.parkingStallChargerInitMethod = "FROM_FILE"
beam.agentsim.taz.parkingStallCountScalingFactor = 1.0

# Parking Params
beam.agentsim.agents.parking.mulitnomialLogit.params.rangeAnxietyMultiplier = -0.5   // fit range anxiety between [-1, 0]
beam.agentsim.agents.parking.mulitnomialLogit.params.distanceMultiplier = -0.086     // based on 20 minute walk for person with VoT = $35/hr which should evaluate as =-1.0
beam.agentsim.agents.parking.mulitnomialLogit.params.parkingPriceMultiplier = -0.5  // based on avg. parking prices of $2.00 evaluating to =-1.0
beam.agentsim.agents.parking.mulitnomialLogit.params.homeActivityPrefersResidentialParkingMultiplier = 2.0 // positive boost if true

beam.agentsim.agents.rideHail.initialization.procedural.initialLocation.name = "HOME"
beam.agentsim.agents.rideHail.initialization.procedural.initialLocation.home.radiusInMeters = 500
beam.agentsim.agents.rideHail.initialization.procedural.vehicleTypeId="RH_BEV"
beam.agentsim.agents.rideHail.initialization.procedural.fractionOfInitialVehicleFleet=0.04

# Ride Hailing General Params
beam.agentsim.agents.rideHail.refuelThresholdInMeters=20000.0
beam.agentsim.agents.rideHail.rideHailManager.radiusInMeters=10000
beam.agentsim.agents.rideHail.iterationStats.timeBinSizeInSec=3600

beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.percentageOfVehiclesToReposition=0.01
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.timeWindowSizeInSecForDecidingAboutRepositioning=1200
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.allowIncreasingRadiusIfDemandInRadiusLow=true
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.minDemandPercentageInRadius=0.1
# repositioningMethod(TOP_SCORES | KMEANS)
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.repositioningMethod="TOP_SCORES"
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.keepMaxTopNScores=5
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.minScoreThresholdForRepositioning=0.00001
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.distanceWeight=0.01
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.waitingTimeWeight=4.0
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.demandWeight=4.0
beam.agentsim.agents.rideHail.allocationManager.repositionLowWaitingTimes.produceDebugImages=true
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.pickupTimeWindowInSec=600
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.dropoffTimeWindowInSec=0.2
beam.agentsim.agents.rideHail.allocationManager.alonsoMora.maxRequestsPerVehicle=5
# when range below refuelRequiredThresholdInMeters, EV Ride Hail CAVs will charge
# when range above noRefuelThresholdInMeters, EV Ride Hail CAVs will not charge
# (between these params probability of charging is linear interpolation from 0% to 100%)
beam.agentsim.agents.rideHail.cav.refuelRequiredThresholdInMeters = 16000.0 # 10 miles
beam.agentsim.agents.rideHail.cav.noRefuelThresholdInMeters = 160000.0 # 60 miles

